{"ast":null,"code":"import _objectSpread from \"C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\6 sem\\\\6s-proj\\\\argon\\\\argon-dashboard-react-master\\\\src\\\\views\\\\examples\\\\Login.js\",\n    _this = this;\n\n/// reactstrap components\nimport { Button, Card, CardHeader, CardBody, FormGroup, // Form,\nInput, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Login = function Login() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n            fullWidth: true,\n            autoComplete: \"username\",\n            type: \"email\",\n            label: \"Email address\"\n          }, getFieldProps('email')), {}, {\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n            fullWidth: true,\n            autoComplete: \"current-password\",\n            type: showPassword ? 'text' : 'password',\n            label: \"Password\"\n          }, getFieldProps('password')), {}, {\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(Iconify, {\n                    icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, _this)\n            },\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          sx: {\n            my: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, getFieldProps('remember')), {}, {\n              checked: values.remember\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 22\n            }, _this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            variant: \"subtitle2\",\n            to: \"#\",\n            underline: \"hover\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/src/views/examples/Login.js"],"names":["Button","Card","CardHeader","CardBody","FormGroup","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","useFormik","Form","FormikProvider","Login","formik","handleSubmit","getFieldProps","Boolean","touched","email","errors","showPassword","endAdornment","password","my","values","remember","RouterLink","isSubmitting"],"mappings":";;;;;AAAA;AACA,SACEA,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,EAME;AACAC,KAPF,EAQEC,eARF,EASEC,cATF,EAUEC,UAVF,EAWEC,GAXF,EAYEC,GAZF,QAaO,YAbP;AAcA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,cAA1B,QAAgD,QAAhD;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE;AAAA,2BAwGE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEC,MAAvB;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,UAAU,MAAnC;AAAoC,QAAA,QAAQ,EAAEC,YAA9C;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,YAAY,EAAC,UAFf;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,KAAK,EAAC;AAJR,aAKMC,aAAa,CAAC,OAAD,CALnB;AAME,YAAA,KAAK,EAAEC,OAAO,CAACC,OAAO,CAACC,KAAR,IAAiBC,MAAM,CAACD,KAAzB,CANhB;AAOE,YAAA,UAAU,EAAED,OAAO,CAACC,KAAR,IAAiBC,MAAM,CAACD;AAPtC;AAAA;AAAA;AAAA;AAAA,mBADF,eAWE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,YAAY,EAAC,kBAFf;AAGE,YAAA,IAAI,EAAEE,YAAY,GAAG,MAAH,GAAY,UAHhC;AAIE,YAAA,KAAK,EAAC;AAJR,aAKML,aAAa,CAAC,UAAD,CALnB;AAME,YAAA,UAAU,EAAE;AACVM,cAAAA,YAAY,eACV,QAAC,cAAD;AAAgB,gBAAA,QAAQ,EAAC,KAAzB;AAAA,uCACE,QAAC,UAAD;AAAc,kBAAA,IAAI,EAAC,KAAnB;AAAA,yCACE,QAAC,OAAD;AAAS,oBAAA,IAAI,EAAED,YAAY,GAAG,cAAH,GAAoB;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ,aANd;AAeE,YAAA,KAAK,EAAEJ,OAAO,CAACC,OAAO,CAACK,QAAR,IAAoBH,MAAM,CAACG,QAA5B,CAfhB;AAgBE,YAAA,UAAU,EAAEL,OAAO,CAACK,QAAR,IAAoBH,MAAM,CAACG;AAhBzC;AAAA;AAAA;AAAA;AAAA,mBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAgCE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAuB,UAAA,UAAU,EAAC,QAAlC;AAA2C,UAAA,cAAc,EAAC,eAA1D;AAA0E,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9E;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,OAAO,eAAE,QAAC,QAAD,kCAAcR,aAAa,CAAC,UAAD,CAA3B;AAAyC,cAAA,OAAO,EAAES,MAAM,CAACC;AAAzD;AAAA;AAAA;AAAA;AAAA,qBADX;AAEE,YAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEC,UAAjB;AAA6B,YAAA,OAAO,EAAC,WAArC;AAAiD,YAAA,EAAE,EAAC,GAApD;AAAwD,YAAA,SAAS,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhCF,eA2CE,QAAC,aAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAC,WAJV;AAKE,UAAA,OAAO,EAAEC,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAxGF,mBADF;AAkKD,CAnKD;;KAAMf,K;AAqKN,eAAeA,KAAf","sourcesContent":["/// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  // Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { useFormik, Form, FormikProvider } from 'formik';\n\nconst Login = () => {\n  return (\n    <>\n      {/* <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <small>Sign in with</small>\n            </div>\n            <div className=\"btn-wrapper text-center\">\n              \n              <Button\n                className=\"btn-neutral btn-icon\"\n                color=\"default\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className=\"btn-inner--icon\">\n                  <img\n                    alt=\"...\"\n                    src={\n                      require(\"../../assets/img/icons/common/google.svg\")\n                        .default\n                    }\n                  />\n                </span>\n                <span className=\"btn-inner--text\">Google</span>\n              </Button>\n            </div>\n          </CardHeader>\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Or sign in with credentials</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  id=\" customCheckLogin\"\n                  type=\"checkbox\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\" customCheckLogin\"\n                >\n                  <span className=\"text-muted\">Remember me</span>\n                </label>\n              </div>\n              <div className=\"text-center\">\n                <Button className=\"my-4\" color=\"primary\" type=\"button\">\n                  Sign in\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Forgot password?</small>\n            </a>\n          </Col>\n          <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col>\n        </Row>\n      </Col> */}\n\n      <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton   edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\n            label=\"Remember me\"\n          />\n\n          <Link component={RouterLink} variant=\"subtitle2\" to=\"#\" underline=\"hover\">\n            Forgot password?\n          </Link> \n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Login\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}