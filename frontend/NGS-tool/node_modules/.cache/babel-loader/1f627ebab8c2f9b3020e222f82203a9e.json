{"ast":null,"code":"var decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint; // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n\nfunction decodeCodePoint(codePoint) {\n  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n\n  if (codePoint in decodeMap) {\n    codePoint = decodeMap[codePoint];\n  }\n\n  var output = \"\";\n\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000;\n    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n    codePoint = 0xdc00 | codePoint & 0x3ff;\n  }\n\n  output += String.fromCharCode(codePoint);\n  return output;\n}","map":{"version":3,"sources":["C:/Users/USER/Documents/6 sem/6s-proj/e17-co328-NGS-Data-AnalysingToolkit/frontend/NGS-tool/node_modules/react-html-parser/node_modules/entities/lib/decode_codepoint.js"],"names":["decodeMap","require","module","exports","decodeCodePoint","codePoint","output","String","fromCharCode"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,eAAjB,C,CAEA;;AACA,SAASA,eAAT,CAAyBC,SAAzB,EAAoC;AAChC,MAAKA,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,MAArC,IAAgDA,SAAS,GAAG,QAAhE,EAA0E;AACtE,WAAO,QAAP;AACH;;AAED,MAAIA,SAAS,IAAIL,SAAjB,EAA4B;AACxBK,IAAAA,SAAS,GAAGL,SAAS,CAACK,SAAD,CAArB;AACH;;AAED,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAID,SAAS,GAAG,MAAhB,EAAwB;AACpBA,IAAAA,SAAS,IAAI,OAAb;AACAC,IAAAA,MAAM,IAAIC,MAAM,CAACC,YAAP,CAAsBH,SAAS,KAAK,EAAf,GAAqB,KAAtB,GAA+B,MAAnD,CAAV;AACAA,IAAAA,SAAS,GAAG,SAAUA,SAAS,GAAG,KAAlC;AACH;;AAEDC,EAAAA,MAAM,IAAIC,MAAM,CAACC,YAAP,CAAoBH,SAApB,CAAV;AACA,SAAOC,MAAP;AACH","sourcesContent":["var decodeMap = require(\"../maps/decode.json\");\r\n\r\nmodule.exports = decodeCodePoint;\r\n\r\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\r\nfunction decodeCodePoint(codePoint) {\r\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\r\n        return \"\\uFFFD\";\r\n    }\r\n\r\n    if (codePoint in decodeMap) {\r\n        codePoint = decodeMap[codePoint];\r\n    }\r\n\r\n    var output = \"\";\r\n\r\n    if (codePoint > 0xffff) {\r\n        codePoint -= 0x10000;\r\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\r\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\r\n    }\r\n\r\n    output += String.fromCharCode(codePoint);\r\n    return output;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}