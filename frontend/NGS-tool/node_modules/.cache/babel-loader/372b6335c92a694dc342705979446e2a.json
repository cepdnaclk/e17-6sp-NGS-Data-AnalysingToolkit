{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar JSONObjectType;\n\n(function (JSONObjectType) {\n  JSONObjectType[JSONObjectType[\"Array\"] = 0] = \"Array\";\n  JSONObjectType[JSONObjectType[\"ObjectWithNonNumericKeys\"] = 1] = \"ObjectWithNonNumericKeys\";\n  JSONObjectType[JSONObjectType[\"Object\"] = 2] = \"Object\";\n  JSONObjectType[JSONObjectType[\"Primitive\"] = 3] = \"Primitive\";\n})(JSONObjectType = exports.JSONObjectType || (exports.JSONObjectType = {}));\n\nvar JsonToTableUtils =\n/** @class */\nfunction () {\n  function JsonToTableUtils() {}\n  /**\r\n   * Get object type\r\n   */\n\n\n  JsonToTableUtils.getObjectType = function (obj) {\n    if (obj !== null && typeof obj === \"object\") {\n      if (Array.isArray(obj)) {\n        return JSONObjectType.Array;\n      } else {\n        if (Object.keys(obj).length) {\n          return JSONObjectType.ObjectWithNonNumericKeys;\n        } else {\n          return JSONObjectType.Object;\n        }\n      }\n    } else {\n      return JSONObjectType.Primitive;\n    }\n  };\n\n  JsonToTableUtils.checkLabelTypes = function (labels) {\n    var reduced = labels.reduce(function (accumulator, value) {\n      return accumulator + (isNaN(Number(value)) ? value : Number(value));\n    }, 0);\n    return typeof reduced === \"number\" ? \"number\" : \"string\";\n  };\n\n  JsonToTableUtils.getUniqueObjectKeys = function (anArray) {\n    var labels = [];\n    var objectType = JSONObjectType.Object;\n    anArray.forEach(function (item) {\n      labels = labels.concat(Object.keys(item)).filter(function (elem, pos, arr) {\n        return arr.indexOf(elem) === pos;\n      });\n    });\n    return {\n      labels: labels,\n      type: objectType\n    };\n  };\n\n  return JsonToTableUtils;\n}();\n\nexports.default = JsonToTableUtils;","map":{"version":3,"sources":["../../../../src/components/JsonToTable/JsonToTableUtils.ts"],"names":[],"mappings":";;;;;AAAA,IAAY,cAAZ;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACtB,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,0BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,0BAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CALD,EAAY,cAAc,GAAd,OAAA,CAAA,cAAA,KAAA,OAAA,CAAA,cAAA,GAAc,EAAd,CAAZ;;AAYA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,gBAAA,GAAA,CAwCC;AAvCG;;AAEG;;;AACW,EAAA,gBAAA,CAAA,aAAA,GAAd,UAA4B,GAA5B,EAAoC;AAChC,QAAI,GAAG,KAAK,IAAR,IAAgB,OAAO,GAAP,KAAe,QAAnC,EAA6C;AACzC,UAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACpB,eAAO,cAAc,CAAC,KAAtB;AACH,OAFD,MAEO;AACH,YAAI,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,MAArB,EAA6B;AACzB,iBAAO,cAAc,CAAC,wBAAtB;AACH,SAFD,MAEO;AACH,iBAAO,cAAc,CAAC,MAAtB;AACH;AACJ;AACJ,KAVD,MAUO;AACH,aAAO,cAAc,CAAC,SAAtB;AACH;AACJ,GAda;;AAgBA,EAAA,gBAAA,CAAA,eAAA,GAAd,UAA8B,MAA9B,EAA2C;AACvC,QAAM,OAAO,GAAG,MAAM,CAAC,MAAP,CACZ,UAAC,WAAD,EAAc,KAAd,EAAmB;AACf,aAAA,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,KAAD,CAAP,CAAL,GAAuB,KAAvB,GAA+B,MAAM,CAAC,KAAD,CAAzC,CAAX;AAA4D,KAFpD,EAGZ,CAHY,CAAhB;AAKA,WAAO,OAAO,OAAP,KAAmB,QAAnB,GAA8B,QAA9B,GAAyC,QAAhD;AACH,GAPa;;AASA,EAAA,gBAAA,CAAA,mBAAA,GAAd,UAAkC,OAAlC,EAAgD;AAC5C,QAAI,MAAM,GAAa,EAAvB;AACA,QAAM,UAAU,GAAmB,cAAc,CAAC,MAAlD;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,IAAA,EAAI;AAChB,MAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAd,EAAiC,MAAjC,CAAwC,UAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAe;AAC5D,eAAO,GAAG,CAAC,OAAJ,CAAY,IAAZ,MAAsB,GAA7B;AACH,OAFQ,CAAT;AAGH,KAJD;AAMA,WAAO;AAAE,MAAA,MAAM,EAAA,MAAR;AAAU,MAAA,IAAI,EAAE;AAAhB,KAAP;AACH,GAVa;;AAWlB,SAAA,gBAAA;AAAC,CAxCD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar JSONObjectType;\r\n(function (JSONObjectType) {\r\n    JSONObjectType[JSONObjectType[\"Array\"] = 0] = \"Array\";\r\n    JSONObjectType[JSONObjectType[\"ObjectWithNonNumericKeys\"] = 1] = \"ObjectWithNonNumericKeys\";\r\n    JSONObjectType[JSONObjectType[\"Object\"] = 2] = \"Object\";\r\n    JSONObjectType[JSONObjectType[\"Primitive\"] = 3] = \"Primitive\";\r\n})(JSONObjectType = exports.JSONObjectType || (exports.JSONObjectType = {}));\r\nvar JsonToTableUtils = /** @class */ (function () {\r\n    function JsonToTableUtils() {\r\n    }\r\n    /**\r\n     * Get object type\r\n     */\r\n    JsonToTableUtils.getObjectType = function (obj) {\r\n        if (obj !== null && typeof obj === \"object\") {\r\n            if (Array.isArray(obj)) {\r\n                return JSONObjectType.Array;\r\n            }\r\n            else {\r\n                if (Object.keys(obj).length) {\r\n                    return JSONObjectType.ObjectWithNonNumericKeys;\r\n                }\r\n                else {\r\n                    return JSONObjectType.Object;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return JSONObjectType.Primitive;\r\n        }\r\n    };\r\n    JsonToTableUtils.checkLabelTypes = function (labels) {\r\n        var reduced = labels.reduce(function (accumulator, value) {\r\n            return accumulator + (isNaN(Number(value)) ? value : Number(value));\r\n        }, 0);\r\n        return typeof reduced === \"number\" ? \"number\" : \"string\";\r\n    };\r\n    JsonToTableUtils.getUniqueObjectKeys = function (anArray) {\r\n        var labels = [];\r\n        var objectType = JSONObjectType.Object;\r\n        anArray.forEach(function (item) {\r\n            labels = labels.concat(Object.keys(item)).filter(function (elem, pos, arr) {\r\n                return arr.indexOf(elem) === pos;\r\n            });\r\n        });\r\n        return { labels: labels, type: objectType };\r\n    };\r\n    return JsonToTableUtils;\r\n}());\r\nexports.default = JsonToTableUtils;\r\n//# sourceMappingURL=JsonToTableUtils.js.map"]},"metadata":{},"sourceType":"script"}