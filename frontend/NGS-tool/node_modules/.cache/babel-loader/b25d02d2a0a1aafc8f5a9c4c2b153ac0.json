{"ast":null,"code":"import _toConsumableArray from \"C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\6 sem\\\\6s-proj\\\\argon\\\\argon-dashboard-react-master\\\\src\\\\views\\\\examples\\\\uploadfile.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\USER\\\\Documents\\\\6 sem\\\\6s-proj\\\\argon\\\\argon-dashboard-react-master\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { React } from 'react';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { faFileAlt, faSpinner, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './upfile.scss';\nimport FileUpload from '../../services/fileupload';\nimport { Button, FormGroup, Form } from 'react-bootstrap';\nimport PaPa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadFile() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      upload = _useState4[0],\n      setUpload = _useState4[1]; //true) \n\n\n  var formData = new FormData();\n\n  var uploadHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = event.target.files[0];\n              console.log(file); // if (!file) return;\n              //file.isUploading = true;\n\n              setFiles([].concat(_toConsumableArray(files), [file])); // form data -------------------------------------\n\n              formData.append('newfile', event.target.files[0]); // await FileUpload.upload(formData).then(res => {\n              //     console.log(res.data);\n              // })\n              // let reader = new FileReader();\n              // reader.readAsText(file);\n              // reader.onload = (e) => {\n              //     file.isUploading = false;\n              //     setFiles([...files, file])\n              //     // setUpload(false)\n              // }\n              // current -------------------------------------\n\n              PaPa.parse(file, {\n                // header: true,\n                // dynamicTyping: true,\n                // skipEmptyLines: true,\n                complete: function complete(results) {\n                  console.log(results.data);\n                  var Data = {\n                    file: file.name,\n                    data: results.data\n                  };\n                  FileUpload.upload(Data).then(function (res) {\n                    console.log(res.data);\n                  });\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var deleteFile = function deleteFile(filename) {\n    setFiles(files.filter(function (file) {\n      return file.name !== filename;\n    }));\n  }; // \"\"\"\n  // data = uploadedfile['data']\n  // data = data.split(\"\\r\\n\")\n  // data_list = []\n  // for i in data:\n  //     data_list.append(i.split(','))\n  // \"\"\"\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                onChange: uploadHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faPlus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), \"Upload Sample File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"main\",\n              children: \"Supported files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"info\",\n              children: \"CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"file-list\",\n                children: files && files.map(function (files) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"file-item\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faFileAlt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: files.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"loading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 53\n                      }, _this), files.isUploading ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faSpinner,\n                        className: \"fa-spin\",\n                        onClick: function onClick() {\n                          return deleteFile(files.name);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 74\n                      }, _this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faTrash,\n                        onClick: function onClick() {\n                          return deleteFile(files.name);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 57\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 49\n                    }, _this)]\n                  }, files.name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faDownload\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), \"Download Sample File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"main\",\n              children: \"Supported files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"info\",\n              children: \"CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"file-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadFile, \"PA5YhOAhMWhsQHKmwzlGb8Og96E=\");\n\n_c = UploadFile;\nexport default UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/src/views/examples/uploadfile.js"],"names":["React","useState","FontAwesomeIcon","faPlus","faDownload","faFileAlt","faSpinner","faTrash","FileUpload","Button","FormGroup","Form","PaPa","UploadFile","files","setFiles","upload","setUpload","formData","FormData","uploadHandler","event","file","target","console","log","append","parse","complete","results","data","Data","name","then","res","deleteFile","filename","filter","map","isUploading"],"mappings":";;;;;;;;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mCAAnC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,OAA/B,QAA8C,mCAA9C;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAClB,kBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA4Bd,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAeC,SAAf,iBAFkB,CAEuB;;;AAEzC,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,MAAMC,aAAa;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,cAAAA,IAFY,GAELD,KAAK,CAACE,MAAN,CAAaT,KAAb,CAAmB,CAAnB,CAFK;AAGlBU,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHkB,CAIlB;AACA;;AACAP,cAAAA,QAAQ,8BAAKD,KAAL,IAAYQ,IAAZ,GAAR,CANkB,CASlB;;AAEAJ,cAAAA,QAAQ,CAACQ,MAAT,CACI,SADJ,EACeL,KAAK,CAACE,MAAN,CAAaT,KAAb,CAAmB,CAAnB,CADf,EAXkB,CAclB;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;;AACAF,cAAAA,IAAI,CAACe,KAAL,CAAWL,IAAX,EAAiB;AACb;AACA;AACA;AACAM,gBAAAA,QAAQ,EAAE,kBAAUC,OAAV,EAAmB;AACzBL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,IAApB;AACA,sBAAMC,IAAI,GAAG;AAAET,oBAAAA,IAAI,EAAEA,IAAI,CAACU,IAAb;AAAmBF,oBAAAA,IAAI,EAAED,OAAO,CAACC;AAAjC,mBAAb;AAEAtB,kBAAAA,UAAU,CAACQ,MAAX,CAAkBe,IAAlB,EAAwBE,IAAxB,CAA6B,UAAAC,GAAG,EAAI;AAChCV,oBAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACJ,IAAhB;AAEH,mBAHD;AAKH;AAbY,eAAjB;;AAnCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbV,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAsDA,MAAMe,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC7BrB,IAAAA,QAAQ,CAACD,KAAK,CAACuB,MAAN,CAAa,UAAAf,IAAI;AAAA,aAAIA,IAAI,CAACU,IAAL,KAAcI,QAAlB;AAAA,KAAjB,CAAD,CAAR;AACH,GAFD,CA3DkB,CA+DlB;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BAEI;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,MAAM,EAAC,MAA1B;AACI,gBAAA,QAAQ,EAAEhB;AADd;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAII;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA,wCAEI;AAAA,yCACI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eA4BI;AAAG,cAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BJ,eA6BI;AAAG,cAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BJ,eA+BI;AAAA,qCACI;AAAI,gBAAA,SAAS,EAAC,WAAd;AAAA,0BAEQW,KAAK,IACLA,KAAK,CAACwB,GAAN,CAAU,UAAAxB,KAAK;AAAA,sCACX;AAAI,oBAAA,SAAS,EAAC,WAAd;AAAA,4CACI,QAAC,eAAD;AAAiB,sBAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA,gCAAIS,KAAK,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,6BAFJ,eAGI;AAAK,sBAAA,SAAS,EAAC,SAAf;AAAA,8CACI;AAAK,wBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEKlB,KAAK,CAACyB,WAAN,gBAAoB,QAAC,eAAD;AACjB,wBAAA,IAAI,EAAEjC,SADW;AACA,wBAAA,SAAS,EAAC,SADV;AAEjB,wBAAA,OAAO,EAAE;AAAA,iCAAM6B,UAAU,CAACrB,KAAK,CAACkB,IAAP,CAAhB;AAAA;AAFQ;AAAA;AAAA;AAAA;AAAA,+BAApB,gBAIG,QAAC,eAAD;AAAiB,wBAAA,IAAI,EAAEzB,OAAvB;AACI,wBAAA,OAAO,EAAE;AAAA,iCAAM4B,UAAU,CAACrB,KAAK,CAACkB,IAAP,CAAhB;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,+BANR;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ;AAAA,qBAA+BlB,KAAK,CAACkB,IAArC;AAAA;AAAA;AAAA;AAAA,2BADW;AAAA,iBAAf;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ,6BA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eA0DI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,wCACI;AAAA,yCACI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAE5B;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAYI;AAAG,cAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAaI;AAAG,cAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAeI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1DJ;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAuGH;;GAhLQS,U;;KAAAA,U;AAkLT,eAAeA,UAAf","sourcesContent":["import { React } from 'react';\r\nimport { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileAlt, faSpinner, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './upfile.scss';\r\nimport FileUpload from '../../services/fileupload';  \r\n \r\nimport { Button, FormGroup, Form } from 'react-bootstrap';\r\nimport PaPa from 'papaparse';   \r\n     \r\n \r\nfunction UploadFile() {\r\n    const [files, setFiles] = useState([]);\r\n    const [upload, setUpload] = useState('');//true) \r\n\r\n    let formData = new FormData();\r\n    const uploadHandler = async (event) => {\r\n\r\n        const file = event.target.files[0];\r\n        console.log(file)\r\n        // if (!file) return;\r\n        //file.isUploading = true;\r\n        setFiles([...files, file])\r\n\r\n\r\n        // form data -------------------------------------\r\n\r\n        formData.append(\r\n            'newfile', event.target.files[0],\r\n        )\r\n        // await FileUpload.upload(formData).then(res => {\r\n        //     console.log(res.data);\r\n\r\n        // })\r\n\r\n\r\n\r\n\r\n        // let reader = new FileReader();\r\n        // reader.readAsText(file);\r\n        // reader.onload = (e) => {\r\n        //     file.isUploading = false;\r\n        //     setFiles([...files, file])\r\n        //     // setUpload(false)\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n        // current -------------------------------------\r\n        PaPa.parse(file, {\r\n            // header: true,\r\n            // dynamicTyping: true,\r\n            // skipEmptyLines: true,\r\n            complete: function (results) {\r\n                console.log(results.data);\r\n                const Data = { file: file.name, data: results.data }\r\n\r\n                FileUpload.upload(Data).then(res => {\r\n                    console.log(res.data);\r\n\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const deleteFile = (filename) => {\r\n        setFiles(files.filter(file => file.name !== filename))\r\n    }\r\n\r\n    // \"\"\"\r\n    // data = uploadedfile['data']\r\n    // data = data.split(\"\\r\\n\")\r\n    // data_list = []\r\n\r\n    // for i in data:\r\n    //     data_list.append(i.split(','))\r\n    // \"\"\"\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                {/* <div className='title'>Upload File</div> */}\r\n                <div className='App' >\r\n\r\n                    <>\r\n\r\n                        <div className=\"file-card\">\r\n\r\n                            <div className=\"file-inputs\">\r\n\r\n                                <input type=\"file\" accept='.csv'\r\n                                    onChange={uploadHandler} />\r\n                                <button type='submit'>\r\n\r\n                                    <i>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </i>\r\n\r\n                                    Upload Sample File\r\n                                </button>\r\n\r\n                                {/* <form onSubmit={uploadHandler}>\r\n                                    <FormGroup>\r\n                                        <Form.Label>Upload file</Form.Label>\r\n                                        <Form.Control type=\"file\" onChange={uploadHandler}></Form.Control>\r\n                                    </FormGroup>\r\n\r\n                                    <Button block bssize=\"large\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </form> */}\r\n\r\n                            </div>\r\n\r\n                            <p className=\"main\">Supported files</p>\r\n                            <p className=\"info\">CSV</p>\r\n\r\n                            <>\r\n                                <ul className=\"file-list\">\r\n                                    {\r\n                                        files &&\r\n                                        files.map(files => (\r\n                                            <li className=\"file-item\" key={files.name}>\r\n                                                <FontAwesomeIcon icon={faFileAlt} />\r\n                                                <p>{files.name}</p>\r\n                                                <div className=\"actions\">\r\n                                                    <div className=\"loading\"></div>\r\n                                                    {files.isUploading ? <FontAwesomeIcon\r\n                                                        icon={faSpinner} className=\"fa-spin\"\r\n                                                        onClick={() => deleteFile(files.name)} />\r\n                                                        :\r\n                                                        <FontAwesomeIcon icon={faTrash}\r\n                                                            onClick={() => deleteFile(files.name)} />\r\n                                                    }\r\n                                                </div>\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </>\r\n                        </div>\r\n\r\n                        <div className=\"file-card\">\r\n\r\n                            <div className=\"file-inputs\">\r\n                                <input type=\"file\" />\r\n                                <button>\r\n                                    <i>\r\n                                        <FontAwesomeIcon icon={faDownload} />\r\n                                    </i>\r\n                                    Download Sample File\r\n                                </button>\r\n                            </div>\r\n\r\n                            <p className=\"main\">Supported files</p>\r\n                            <p className=\"info\">CSV</p>\r\n\r\n                            <ul className=\"file-list\"></ul>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n                </div>\r\n                {/* <form onSubmit={this.handleSubmitData}>\r\n                    <FormGroup>\r\n                        <Form.Label>Upload file</Form.Label>\r\n                    <input type=\"file\" onChange={this.handleFile} />\r\n                    </FormGroup>\r\n\r\n                    <Button block bssize=\"large\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </form> */}\r\n            </div >\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadFile;"]},"metadata":{},"sourceType":"module"}