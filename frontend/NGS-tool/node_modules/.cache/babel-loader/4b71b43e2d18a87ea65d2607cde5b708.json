{"ast":null,"code":"/**\n * @class Boxplot\n */\nvar React = require('react');\n\nvar PropTypes = require('prop-types'); // Inspiration:\n//\n// - https://turgar.github.io/\n// - http://bl.ocks.org/mbostock/4061502\n// - http://bl.ocks.org/jensgrubert/7789216\n// - http://flowingdata.com/2008/02/15/how-to-read-and-use-a-box-and-whisker-plot/\n//\n\n\nvar Boxplot = function Boxplot(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      orientation = _ref.orientation,\n      min = _ref.min,\n      max = _ref.max,\n      stats = _ref.stats,\n      style = _ref.style,\n      tickStyle = _ref.tickStyle,\n      whiskerStrokeWidth = _ref.whiskerStrokeWidth,\n      whiskerStyle = _ref.whiskerStyle,\n      boxStyle = _ref.boxStyle,\n      medianStrokeWidth = _ref.medianStrokeWidth,\n      medianStyle = _ref.medianStyle,\n      outlierRadius = _ref.outlierRadius,\n      outlierStyle = _ref.outlierStyle,\n      className = _ref.className;\n  var xMax, horizScaleFactor, vertScaleFactor, transforms;\n\n  if (orientation === 'vertical') {\n    xMax = width;\n    vertScaleFactor = height / (max - min);\n    horizScaleFactor = 1.0; // Coordinate system: +y at the top, +x to the right.\n\n    transforms = [\"translate (\".concat(-min, \", 0)\"), \"translate (0, \".concat(height, \")\"), \"scale(1, -\".concat(vertScaleFactor, \")\")];\n  } else {\n    xMax = height;\n    horizScaleFactor = width / (max - min);\n    vertScaleFactor = 1.0; // Coordinate system: +y at the right, +x to the top.\n\n    transforms = [\"scale(\".concat(horizScaleFactor, \", 1) \"), \"translate (\".concat(-min, \", 0) \"), \"translate (0, \".concat(height, \") \"), 'rotate(-90)'];\n  }\n\n  var xMin = 0;\n  var xCenter = xMax / 2;\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    className: className\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: transforms.join(' '),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    key: \"tick-low\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.whiskerLow,\n    y2: stats.whiskerLow,\n    strokeWidth: whiskerStrokeWidth / horizScaleFactor,\n    style: tickStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"whisker-low\",\n    x1: xCenter,\n    x2: xCenter,\n    y1: stats.whiskerLow,\n    y2: stats.quartile1,\n    strokeWidth: whiskerStrokeWidth / vertScaleFactor,\n    style: whiskerStyle\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    key: \"box\",\n    x: xMin,\n    width: xMax - xMin,\n    y: stats.quartile1,\n    height: stats.quartile3 - stats.quartile1,\n    strokeWidth: \"0\",\n    style: boxStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"median\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.quartile2,\n    y2: stats.quartile2,\n    strokeWidth: medianStrokeWidth / horizScaleFactor,\n    style: medianStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"whisker-high\",\n    x1: xCenter,\n    x2: xCenter,\n    y1: stats.whiskerHigh,\n    y2: stats.quartile3,\n    strokeWidth: whiskerStrokeWidth / vertScaleFactor,\n    style: whiskerStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"tick-high\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.whiskerHigh,\n    y2: stats.whiskerHigh,\n    strokeWidth: whiskerStrokeWidth / horizScaleFactor,\n    style: tickStyle\n  }), stats.outliers.map(function (outlier, index) {\n    return /*#__PURE__*/React.createElement(\"ellipse\", {\n      key: \"outlier-\".concat(index),\n      cx: xCenter,\n      cy: outlier,\n      rx: outlierRadius / vertScaleFactor,\n      ry: outlierRadius / horizScaleFactor,\n      strokeWidth: \"0\",\n      style: outlierStyle\n    });\n  })));\n};\n\nBoxplot.propTypes = {\n  // Width of the svg element\n  width: PropTypes.number.isRequired,\n  // Height of the svg element\n  height: PropTypes.number.isRequired,\n  // Orientation of the plot. vertical means min values at the left,\n  // horizontal means min values at the bottom.\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  // Minimum and maximum values for the axis. Values outside this\n  // range are clipped.\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  // The stats to plot.\n  stats: PropTypes.shape({\n    // The tick of the lower whisker.\n    whiskerLow: PropTypes.number.isRequired,\n    // The lower end of the box.\n    quartile1: PropTypes.number.isRequired,\n    // The median.\n    quartile2: PropTypes.number.isRequired,\n    // The upper end of the box.\n    quartile3: PropTypes.number.isRequired,\n    // The tick of the upper whisker.\n    whiskerHigh: PropTypes.number.isRequired,\n    // The outliers.\n    outliers: PropTypes.array\n  }),\n  style: PropTypes.object,\n  tickStyle: PropTypes.object,\n  whiskerStrokeWidth: PropTypes.number,\n  whiskerStyle: PropTypes.object,\n  boxStyle: PropTypes.object,\n  medianStrokeWidth: PropTypes.number,\n  medianStyle: PropTypes.object,\n  outlierRadius: PropTypes.number,\n  outlierStyle: PropTypes.object,\n  // Pass through, to support styled-components.\n  className: PropTypes.string\n};\nBoxplot.defaultProps = {\n  orientation: 'vertical',\n  style: {\n    strokeOpacity: 1,\n    fillOpacity: 0.75\n  },\n  // tickStyle: { stroke: 'black', strokeDasharray: '2,2' },\n  tickStyle: {\n    stroke: 'black'\n  },\n  whiskerStrokeWidth: 1,\n  // whiskerStyle: { stroke: 'black', strokeDasharray: '2,2' },\n  whiskerStyle: {\n    stroke: 'black'\n  },\n  boxStyle: {\n    stroke: 'black',\n    fill: 'black'\n  },\n  medianStrokeWidth: 2,\n  medianStyle: {\n    stroke: 'white'\n  },\n  outlierRadius: 2.5,\n  outlierStyle: {\n    stroke: 'black',\n    fill: 'black'\n  }\n};\n\nvar ss = require('simple-statistics');\n\nfunction computeBoxplotStats(data) {\n  var quartile2 = ss.median(data);\n  var quartile1 = ss.quantile(data, 0.25);\n  var quartile3 = ss.quantile(data, 0.75);\n  var interQuartileRange = quartile3 - quartile1;\n  var lowerOutlierCutoff = quartile1 - 1.5 * interQuartileRange;\n  var upperOutlierCutoff = quartile3 + 1.5 * interQuartileRange;\n  var outliers = [];\n  var nonOutliers = [];\n  data.forEach(function (datum) {\n    if (datum < lowerOutlierCutoff || datum > upperOutlierCutoff) {\n      outliers.push(datum);\n    } else {\n      nonOutliers.push(datum);\n    }\n  });\n  var whiskerLow = ss.min(nonOutliers);\n  var whiskerHigh = ss.max(nonOutliers);\n  return {\n    whiskerLow: whiskerLow,\n    quartile1: quartile1,\n    quartile2: quartile2,\n    quartile3: quartile3,\n    whiskerHigh: whiskerHigh,\n    outliers: outliers\n  };\n}\n\nexport { computeBoxplotStats, Boxplot as default };","map":{"version":3,"sources":["C:/Users/USER/Documents/6 sem/6s-proj/argon/argon-dashboard-react-master/node_modules/react-boxplot/dist/index.es.js"],"names":["React","require","PropTypes","Boxplot","_ref","width","height","orientation","min","max","stats","style","tickStyle","whiskerStrokeWidth","whiskerStyle","boxStyle","medianStrokeWidth","medianStyle","outlierRadius","outlierStyle","className","xMax","horizScaleFactor","vertScaleFactor","transforms","concat","xMin","xCenter","createElement","transform","join","key","x1","x2","y1","whiskerLow","y2","strokeWidth","quartile1","x","y","quartile3","quartile2","whiskerHigh","outliers","map","outlier","index","cx","cy","rx","ry","propTypes","number","isRequired","oneOf","shape","array","object","string","defaultProps","strokeOpacity","fillOpacity","stroke","fill","ss","computeBoxplotStats","data","median","quantile","interQuartileRange","lowerOutlierCutoff","upperOutlierCutoff","nonOutliers","forEach","datum","push","default"],"mappings":"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","sourcesContent":["/**\n * @class Boxplot\n */\nvar React = require('react');\n\nvar PropTypes = require('prop-types'); // Inspiration:\n//\n// - https://turgar.github.io/\n// - http://bl.ocks.org/mbostock/4061502\n// - http://bl.ocks.org/jensgrubert/7789216\n// - http://flowingdata.com/2008/02/15/how-to-read-and-use-a-box-and-whisker-plot/\n//\n\n\nvar Boxplot = function Boxplot(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      orientation = _ref.orientation,\n      min = _ref.min,\n      max = _ref.max,\n      stats = _ref.stats,\n      style = _ref.style,\n      tickStyle = _ref.tickStyle,\n      whiskerStrokeWidth = _ref.whiskerStrokeWidth,\n      whiskerStyle = _ref.whiskerStyle,\n      boxStyle = _ref.boxStyle,\n      medianStrokeWidth = _ref.medianStrokeWidth,\n      medianStyle = _ref.medianStyle,\n      outlierRadius = _ref.outlierRadius,\n      outlierStyle = _ref.outlierStyle,\n      className = _ref.className;\n  var xMax, horizScaleFactor, vertScaleFactor, transforms;\n\n  if (orientation === 'vertical') {\n    xMax = width;\n    vertScaleFactor = height / (max - min);\n    horizScaleFactor = 1.0; // Coordinate system: +y at the top, +x to the right.\n\n    transforms = [\"translate (\".concat(-min, \", 0)\"), \"translate (0, \".concat(height, \")\"), \"scale(1, -\".concat(vertScaleFactor, \")\")];\n  } else {\n    xMax = height;\n    horizScaleFactor = width / (max - min);\n    vertScaleFactor = 1.0; // Coordinate system: +y at the right, +x to the top.\n\n    transforms = [\"scale(\".concat(horizScaleFactor, \", 1) \"), \"translate (\".concat(-min, \", 0) \"), \"translate (0, \".concat(height, \") \"), 'rotate(-90)'];\n  }\n\n  var xMin = 0;\n  var xCenter = xMax / 2;\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    className: className\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: transforms.join(' '),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    key: \"tick-low\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.whiskerLow,\n    y2: stats.whiskerLow,\n    strokeWidth: whiskerStrokeWidth / horizScaleFactor,\n    style: tickStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"whisker-low\",\n    x1: xCenter,\n    x2: xCenter,\n    y1: stats.whiskerLow,\n    y2: stats.quartile1,\n    strokeWidth: whiskerStrokeWidth / vertScaleFactor,\n    style: whiskerStyle\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    key: \"box\",\n    x: xMin,\n    width: xMax - xMin,\n    y: stats.quartile1,\n    height: stats.quartile3 - stats.quartile1,\n    strokeWidth: \"0\",\n    style: boxStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"median\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.quartile2,\n    y2: stats.quartile2,\n    strokeWidth: medianStrokeWidth / horizScaleFactor,\n    style: medianStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"whisker-high\",\n    x1: xCenter,\n    x2: xCenter,\n    y1: stats.whiskerHigh,\n    y2: stats.quartile3,\n    strokeWidth: whiskerStrokeWidth / vertScaleFactor,\n    style: whiskerStyle\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    key: \"tick-high\",\n    x1: xMin,\n    x2: xMax,\n    y1: stats.whiskerHigh,\n    y2: stats.whiskerHigh,\n    strokeWidth: whiskerStrokeWidth / horizScaleFactor,\n    style: tickStyle\n  }), stats.outliers.map(function (outlier, index) {\n    return /*#__PURE__*/React.createElement(\"ellipse\", {\n      key: \"outlier-\".concat(index),\n      cx: xCenter,\n      cy: outlier,\n      rx: outlierRadius / vertScaleFactor,\n      ry: outlierRadius / horizScaleFactor,\n      strokeWidth: \"0\",\n      style: outlierStyle\n    });\n  })));\n};\nBoxplot.propTypes = {\n  // Width of the svg element\n  width: PropTypes.number.isRequired,\n  // Height of the svg element\n  height: PropTypes.number.isRequired,\n  // Orientation of the plot. vertical means min values at the left,\n  // horizontal means min values at the bottom.\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  // Minimum and maximum values for the axis. Values outside this\n  // range are clipped.\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  // The stats to plot.\n  stats: PropTypes.shape({\n    // The tick of the lower whisker.\n    whiskerLow: PropTypes.number.isRequired,\n    // The lower end of the box.\n    quartile1: PropTypes.number.isRequired,\n    // The median.\n    quartile2: PropTypes.number.isRequired,\n    // The upper end of the box.\n    quartile3: PropTypes.number.isRequired,\n    // The tick of the upper whisker.\n    whiskerHigh: PropTypes.number.isRequired,\n    // The outliers.\n    outliers: PropTypes.array\n  }),\n  style: PropTypes.object,\n  tickStyle: PropTypes.object,\n  whiskerStrokeWidth: PropTypes.number,\n  whiskerStyle: PropTypes.object,\n  boxStyle: PropTypes.object,\n  medianStrokeWidth: PropTypes.number,\n  medianStyle: PropTypes.object,\n  outlierRadius: PropTypes.number,\n  outlierStyle: PropTypes.object,\n  // Pass through, to support styled-components.\n  className: PropTypes.string\n};\nBoxplot.defaultProps = {\n  orientation: 'vertical',\n  style: {\n    strokeOpacity: 1,\n    fillOpacity: 0.75\n  },\n  // tickStyle: { stroke: 'black', strokeDasharray: '2,2' },\n  tickStyle: {\n    stroke: 'black'\n  },\n  whiskerStrokeWidth: 1,\n  // whiskerStyle: { stroke: 'black', strokeDasharray: '2,2' },\n  whiskerStyle: {\n    stroke: 'black'\n  },\n  boxStyle: {\n    stroke: 'black',\n    fill: 'black'\n  },\n  medianStrokeWidth: 2,\n  medianStyle: {\n    stroke: 'white'\n  },\n  outlierRadius: 2.5,\n  outlierStyle: {\n    stroke: 'black',\n    fill: 'black'\n  }\n};\n\nvar ss = require('simple-statistics');\n\nfunction computeBoxplotStats(data) {\n  var quartile2 = ss.median(data);\n  var quartile1 = ss.quantile(data, 0.25);\n  var quartile3 = ss.quantile(data, 0.75);\n  var interQuartileRange = quartile3 - quartile1;\n  var lowerOutlierCutoff = quartile1 - 1.5 * interQuartileRange;\n  var upperOutlierCutoff = quartile3 + 1.5 * interQuartileRange;\n  var outliers = [];\n  var nonOutliers = [];\n  data.forEach(function (datum) {\n    if (datum < lowerOutlierCutoff || datum > upperOutlierCutoff) {\n      outliers.push(datum);\n    } else {\n      nonOutliers.push(datum);\n    }\n  });\n  var whiskerLow = ss.min(nonOutliers);\n  var whiskerHigh = ss.max(nonOutliers);\n  return {\n    whiskerLow: whiskerLow,\n    quartile1: quartile1,\n    quartile2: quartile2,\n    quartile3: quartile3,\n    whiskerHigh: whiskerHigh,\n    outliers: outliers\n  };\n}\n\nexport { computeBoxplotStats, Boxplot as default };\n"]},"metadata":{},"sourceType":"module"}